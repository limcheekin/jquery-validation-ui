After the plugin installed into your project, the following configurations will be appended to your project's @Config.groovy@ file:

{code}
// Added by the JQuery Validation plugin:
jqueryValidation.packed = true
jqueryValidation.cdn = false  // false or "microsoft"
jqueryValidation.additionalMethods = false


// Added by the JQuery Validation UI plugin:
jqueryValidationUi {
        errorClass = 'error'
        validClass = 'valid'
        onsubmit = true
        renderErrorsOnTop = false
        
        qTip {
          packed = true
          classes = 'ui-tooltip-red ui-tooltip-shadow ui-tooltip-rounded'  
        }
        
        /*
          Grails constraints to JQuery Validation rules mapping for client side validation.
          Constraint not found in the ConstraintsMap will trigger remote AJAX validation.
        */
        StringConstraintsMap = [
                blank:'required', // inverse: blank=false, required=true
                creditCard:'creditcard',
                email:'email',
                inList:'inList',
                minSize:'minlength',
                maxSize:'maxlength',
                size:'rangelength',
                matches:'matches',
                notEqual:'notEqual',
                url:'url',
                nullable:'required',
                unique:'unique',
                validator:'validator'
        ]
        
        // Long, Integer, Short, Float, Double, BigInteger, BigDecimal
        NumberConstraintsMap = [
                min:'min',
                max:'max',
                range:'range',
                notEqual:'notEqual',
                nullable:'required',
                inList:'inList',
                unique:'unique',
                validator:'validator'
        ]
        
        CollectionConstraintsMap = [
                minSize:'minlength',
                maxSize:'maxlength',
                size:'rangelength',
                nullable:'required',
                validator:'validator'
        ]
        
        DateConstraintsMap = [
                min:'minDate',
                max:'maxDate',
                range:'rangeDate',
                notEqual:'notEqual',
                nullable:'required',
                inList:'inList',
                unique:'unique',
                validator:'validator'
        ]
        
        ObjectConstraintsMap = [
                nullable:'required',
                validator:'validator'
        ]

        CustomConstraintsMap = [
                phone:'true',
                phoneUS:'true'
        ]
}
{code}

The first section is configuration of the dependent plugin - JQuery Validation. You can find out more about the description of 
it's configuration at it's [project page|http://www.grails.org/plugin/jquery-validation].

The second section is configuration items of the JQuery Validation UI plugin:
* *errorClass* - This class used by JQuery Validation library to create error labels, to look for existing error labels and to add it to invalid elements.
* *validClass* - This class is added to an element by JQuery Validation library after it was validated and considered valid.
* *onsubmit = true|false* - Default is @true@. JQuery Validation library validates the form on submit. Set to @false@ to use only other events for validation. The following code trigger validation and submit the form if all inputs are valid:
{code}
if ($('form:first').validate().form()) {
   $('form:first').submit();
}
{code}
* *renderErrorsOnTop = true|false* - Default is @false@. Validation messages will display on the right of input element. Set to @true@ to display all validation messages on the top of the form.
* *qTip.packed = true|false* - Default is @true@. Set to @false@ to view a readable .js file for development purpose.
* *qTip.classes* - Specify the styles of qTip. Refer to qTip style [documentation|http://craigsworks.com/projects/qtip2/docs/style/].

Client side validation enabled by JQuery Validation using Constraints Map, these Constraints Maps specify how Grails constraints map to JQuery Validation 
rules such as @StringConstraintsMap@, @NumberConstraintsMap@, @CollectionConstraintsMap@, @DateConstraintsMap@ and @ObjectConstraintsMap@ (@ObjectConstraintsMap@ is 
catch-all map if the property is not belongs to any other Constraints Maps). Refer to 
[JQuery Validation documentation|http://docs.jquery.com/Plugins/Validation#List_of_built-in_Validation_methods] for built-in validation rules supported by the library and 
[additional rules|http://github.com/limcheekin/jquery-validation-ui/blob/master/web-app/js/jquery-validation-ui/grails-validation-methods.js] 
written for this plugin.

{note}@CustomConstraintsMap@ configuration supported since 1.1 released. If previous version of the plugin was installed, upgrade to 1.1 version will not update 
your Config.groovy file, please update it manually. Please see Extensibility in the [features|guide:features] section for more information.{note}